// <auto-generated />
using System;
using DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataModel.Migrations
{
    [DbContext(typeof(MMSDbContext))]
    [Migration("20221013081209_manager")]
    partial class manager
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataModel.Identity.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DataModel.Models.Entities.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("birthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("homeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hrId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("timeLimit")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("woreda")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("hrId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            id = 1,
                            birthPlace = "ብቸና ከተማ",
                            homeNumber = "+251923531946",
                            hrId = 1,
                            name = "የሱፍ",
                            phoneNumber = "+251923531946",
                            region = "አማራ",
                            subCity = "ንፋስ ስልክ ላፍቶ",
                            timeLimit = new DateTimeOffset(new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Unspecified).AddTicks(8095), new TimeSpan(0, 3, 0, 0, 0)),
                            woreda = "02"
                        },
                        new
                        {
                            id = 2,
                            birthPlace = "ባቲ ከተማ",
                            homeNumber = "+251923531946",
                            hrId = 1,
                            name = "ሙሀመድ",
                            phoneNumber = "+251923531946",
                            region = "አማራ",
                            subCity = "ቦሌ",
                            timeLimit = new DateTimeOffset(new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Unspecified).AddTicks(8113), new TimeSpan(0, 3, 0, 0, 0)),
                            woreda = "02"
                        },
                        new
                        {
                            id = 3,
                            birthPlace = "ጊንጪ ከተማ",
                            homeNumber = "+251923531946",
                            hrId = 2,
                            name = "ሁንዴ",
                            phoneNumber = "+251923531946",
                            region = "ኦሮሚያ",
                            subCity = "ንፋስ ስልክ ላፍቶ",
                            timeLimit = new DateTimeOffset(new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Unspecified).AddTicks(8140), new TimeSpan(0, 3, 0, 0, 0)),
                            woreda = "02"
                        },
                        new
                        {
                            id = 4,
                            birthPlace = "ብቸና ከተማ",
                            homeNumber = "+251923531946",
                            hrId = 1,
                            name = "ሰማይነህ",
                            phoneNumber = "+251923531946",
                            region = "አማራ",
                            subCity = "ንፋስ ስልክ ላፍቶ",
                            timeLimit = new DateTimeOffset(new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Unspecified).AddTicks(8142), new TimeSpan(0, 3, 0, 0, 0)),
                            woreda = "02"
                        },
                        new
                        {
                            id = 5,
                            birthPlace = "ብቸና ከተማ",
                            homeNumber = "+251923531946",
                            hrId = 1,
                            name = "የሱፍ",
                            phoneNumber = "+251923531946",
                            region = "አማራ",
                            subCity = "ንፋስ ስልክ ላፍቶ",
                            timeLimit = new DateTimeOffset(new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Unspecified).AddTicks(8143), new TimeSpan(0, 3, 0, 0, 0)),
                            woreda = "02"
                        });
                });

            modelBuilder.Entity("DataModel.Models.Entities.CustomerWarranty", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("warrantyId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("woreda")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("customerId");

                    b.ToTable("CustemerWarranties");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "ብቸና ከተማ",
                            customerId = 1,
                            name = "የሱፍ",
                            region = "አማራ",
                            subCity = "ንፋስ ስልክ ላፍቶ",
                            woreda = "02"
                        },
                        new
                        {
                            id = 2,
                            address = "ባቲ ከተማ",
                            customerId = 1,
                            name = "ሙሀመድ",
                            region = "አማራ",
                            subCity = "ቦሌ",
                            woreda = "02"
                        },
                        new
                        {
                            id = 3,
                            address = "ጊንጪ ከተማ",
                            customerId = 1,
                            name = "ሁንዴ",
                            region = "ኦሮሚያ",
                            subCity = "ንፋስ ስልክ ላፍቶ",
                            woreda = "02"
                        },
                        new
                        {
                            id = 4,
                            address = "ብቸና ከተማ",
                            customerId = 1,
                            name = "ሰማይነህ",
                            region = "አማራ",
                            subCity = "ንፋስ ስልክ ላፍቶ",
                            woreda = "02"
                        });
                });

            modelBuilder.Entity("DataModel.Models.Entities.Distribute", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("distributeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"), 1L, 1);

                    b.Property<int>("distributeQuantity")
                        .HasColumnType("int");

                    b.Property<int>("requestId")
                        .HasColumnType("int");

                    b.Property<int>("storeItemId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("requestId");

                    b.HasIndex("storeItemId");

                    b.ToTable("Distributes");
                });

            modelBuilder.Entity("DataModel.Models.Entities.HR", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hrId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fpId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("higherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("middleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("occpation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reponsibilty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Hrs");

                    b.HasData(
                        new
                        {
                            id = 1,
                            LastName = "አለሙ",
                            birthDate = new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Local).AddTicks(8011),
                            firstName = "የሱፍ",
                            fpId = "26505157",
                            gender = "ወንድ",
                            higherDate = new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Local).AddTicks(8024),
                            middleName = "ፈንታ",
                            occpation = "ጀማሪ የሶፍትዌር ባለሙያ",
                            rank = "J_V / ጀማሪ",
                            reponsibilty = "የሲቪል ሰራተኛ"
                        },
                        new
                        {
                            id = 2,
                            LastName = "አሊ",
                            birthDate = new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Local).AddTicks(8026),
                            firstName = "ሙሀመድ",
                            fpId = "26505152",
                            gender = "ወንድ",
                            higherDate = new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Local).AddTicks(8027),
                            middleName = "ሁሴን",
                            occpation = "ጀማሪ የሶፍትዌር ባለሙያ",
                            rank = "J_V / ጀማሪ",
                            reponsibilty = "የሲቪል ሰራተኛ"
                        },
                        new
                        {
                            id = 3,
                            LastName = "ኦርጌሳ",
                            birthDate = new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Local).AddTicks(8028),
                            firstName = "ሁንዴ",
                            fpId = "26505156",
                            gender = "ወንድ",
                            higherDate = new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Local).AddTicks(8028),
                            middleName = "ረጋሳ",
                            occpation = "ጀማሪ የሶፍትዌር ባለሙያ",
                            rank = "J_V / ጀማሪ",
                            reponsibilty = "የሲቪል ሰራተኛ"
                        },
                        new
                        {
                            id = 4,
                            LastName = "ታደሰ",
                            birthDate = new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Local).AddTicks(8030),
                            firstName = "ሰማይነህ",
                            fpId = "26505155",
                            gender = "ወንድ",
                            higherDate = new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Local).AddTicks(8030),
                            middleName = "ከበደ",
                            occpation = "ጀማሪ የዌብሳይት አስተዳደር ባለሙያ",
                            rank = "J_V / ጀማሪ",
                            reponsibilty = "የሲቪል ሰራተኛ"
                        },
                        new
                        {
                            id = 5,
                            LastName = "ተንኮሉ",
                            birthDate = new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Local).AddTicks(8031),
                            firstName = "ተረፈ",
                            fpId = "fp2650",
                            gender = "ወንድ",
                            higherDate = new DateTime(2022, 10, 13, 11, 12, 8, 582, DateTimeKind.Local).AddTicks(8031),
                            middleName = "በከለ",
                            occpation = "ዋና ክፍል ሀላፊ",
                            rank = "ዋና ክፍል",
                            reponsibilty = "ዋና ክፍል"
                        });
                });

            modelBuilder.Entity("DataModel.Models.Entities.NotifyHeader", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notifyHeaderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("attachments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemDescription")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("id");

                    b.ToTable("NotifyHeaders");

                    b.HasData(
                        new
                        {
                            id = 1,
                            attachments = "Upload your Attachment",
                            itemDescription = "የኢትዮጵያ መከላከያ መሳሪያዎችና ጥይቶች"
                        },
                        new
                        {
                            id = 2,
                            attachments = "Upload your Attachment",
                            itemDescription = "የፌደራል ፖሊስ የክላሽ ጠብመንጃዎችና ጥይች"
                        });
                });

            modelBuilder.Entity("DataModel.Models.Entities.NotifyItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notifyItemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("notifyHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("id");

                    b.HasIndex("notifyHeaderId");

                    b.ToTable("NotifyItems");

                    b.HasData(
                        new
                        {
                            id = 1,
                            model = "ክላሽ ጠብመንጃ",
                            name = "ክላሽ ጠብመንጃ",
                            notifyHeaderId = 1,
                            quantity = 10,
                            type = "ክላሽ ጠብመንጃ"
                        },
                        new
                        {
                            id = 2,
                            model = "ክላሽ ጠብመንጃ ካርታ",
                            name = "ክላሽ ጠብመንጃ ካርታ",
                            notifyHeaderId = 2,
                            quantity = 10,
                            type = "ክላሽ ጠብመንጃ ካርታ"
                        },
                        new
                        {
                            id = 3,
                            model = "የፒኬአም መተረየስ",
                            name = "የፒኬአም መተረየስ",
                            notifyHeaderId = 1,
                            quantity = 10,
                            type = "የፒኬአም መተረየስ"
                        },
                        new
                        {
                            id = 4,
                            model = "ካኑኒ ኤስ ሽጉጥ",
                            name = "ካኑኒ ኤስ ሽጉጥ",
                            notifyHeaderId = 2,
                            quantity = 10,
                            type = "ካኑኒ ኤስ ሽጉጥ"
                        },
                        new
                        {
                            id = 5,
                            model = "ጠብመንጃ AK-47",
                            name = "ክላሽ ጠብመንጃ AK-47",
                            notifyHeaderId = 2,
                            quantity = 10,
                            type = "ክላሽ ጠብመንጃ"
                        });
                });

            modelBuilder.Entity("DataModel.Models.Entities.RequestHeader", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("requestHeaderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("attachments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("hrId")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("hrId");

                    b.ToTable("RequestHeaders");

                    b.HasData(
                        new
                        {
                            id = 1,
                            attachments = "Upload your Attachment",
                            description = "የኢትዮጵያ መከላከያ መሳሪያዎችና ጥይቶች",
                            hrId = 1
                        },
                        new
                        {
                            id = 2,
                            attachments = "Upload your Attachment",
                            description = "የፌደራል ፖሊስ የክላሽ ጠብመንጃዎችና ጥይች",
                            hrId = 2
                        });
                });

            modelBuilder.Entity("DataModel.Models.Entities.RequestItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("requestItemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("approvedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("distributeQuantity")
                        .HasColumnType("int");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("requestHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("requestedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("requestHeaderId");

                    b.ToTable("RequestItems");

                    b.HasData(
                        new
                        {
                            id = 1,
                            approvedQuantity = 0,
                            attachments = "Upload your Attachment",
                            distributeQuantity = 0,
                            model = "ክላሽ ጠብመንጃ",
                            name = "የኢትዮጵያ መከላከያ መሳሪያዎችና ጥይቶች",
                            requestHeaderId = 1,
                            requestedQuantity = 10,
                            status = "pending",
                            type = "ክላሽ ጠብመንጃ"
                        },
                        new
                        {
                            id = 2,
                            approvedQuantity = 0,
                            attachments = "Upload your Attachment",
                            distributeQuantity = 0,
                            model = "ክላሽ ጠብመንጃ ካርታ",
                            name = "የኢትዮጵያ መከላከያ መሳሪያዎችና ጥይቶች",
                            requestHeaderId = 1,
                            requestedQuantity = 5,
                            status = "pending",
                            type = "ክላሽ ጠብመንጃ ካርታ"
                        },
                        new
                        {
                            id = 3,
                            approvedQuantity = 0,
                            attachments = "Upload your Attachment",
                            distributeQuantity = 0,
                            model = "የፒኬአም መተረየስ",
                            name = "የፌደራል ፖሊስ የክላሽ ጠብመንጃዎችና ጥይች",
                            requestHeaderId = 1,
                            requestedQuantity = 10,
                            status = "pending",
                            type = "የፒኬአም መተረየስ"
                        },
                        new
                        {
                            id = 4,
                            approvedQuantity = 0,
                            attachments = "Upload your Attachment",
                            distributeQuantity = 0,
                            model = "ክላሽ ጠብመንጃ AK-47",
                            name = "የኢትዮጵያ መከላከያ መሳሪያዎችና ጥይቶች",
                            requestHeaderId = 2,
                            requestedQuantity = 10,
                            status = "pending",
                            type = "ክላሽ ጠብመንጃ"
                        },
                        new
                        {
                            id = 5,
                            approvedQuantity = 0,
                            attachments = "Upload your Attachment",
                            distributeQuantity = 0,
                            model = "ካኑኒ ኤስ ሽጉጥ",
                            name = "የፌደራል ፖሊስ የክላሽ ጠብመንጃዎችና ጥይች",
                            requestHeaderId = 2,
                            requestedQuantity = 10,
                            status = "pending",
                            type = "ካኑኒ ኤስ ሽጉጥ"
                        },
                        new
                        {
                            id = 6,
                            approvedQuantity = 0,
                            attachments = "Upload your Attachment",
                            distributeQuantity = 0,
                            model = "ካኑኒ ኤስ ሽጉጥ",
                            name = "የፌደራል ፖሊስ የክላሽ ጠብመንጃዎችና ጥይች",
                            requestHeaderId = 2,
                            requestedQuantity = 5,
                            status = "pending",
                            type = "ካኑኒ ኤስ ሽጉጥ"
                        });
                });

            modelBuilder.Entity("DataModel.Models.Entities.ReturnHeader", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("returnHeaderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hrId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("hrId");

                    b.ToTable("ReturnHeaders");
                });

            modelBuilder.Entity("DataModel.Models.Entities.ReturnItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("returnItemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("returnHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("returnHeaderId");

                    b.ToTable("ReturnItems");
                });

            modelBuilder.Entity("DataModel.Models.Entities.StoreHeader", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("storeHeaderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("donor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemNoInExpenditureRegister")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noOfEntryInTheRegisterOfIncomingGoods")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("notifyHeaderId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("StoreHeaders");

                    b.HasData(
                        new
                        {
                            id = 1,
                            donor = "የኢትዮጵያ መከላከያ",
                            itemNoInExpenditureRegister = "no. 1",
                            noOfEntryInTheRegisterOfIncomingGoods = "10 items",
                            notifyHeaderId = 0
                        },
                        new
                        {
                            id = 2,
                            donor = "የኢትዮጵያ መከላከያ",
                            itemNoInExpenditureRegister = "no. 2",
                            noOfEntryInTheRegisterOfIncomingGoods = "10 items",
                            notifyHeaderId = 0
                        });
                });

            modelBuilder.Entity("DataModel.Models.Entities.StoreItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("storeItemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("approvedQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("availability")
                        .HasColumnType("bit");

                    b.Property<int>("availableQuantity")
                        .HasColumnType("int");

                    b.Property<string>("itemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("serialNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shelfNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("storeHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("storeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("storeHeaderId");

                    b.ToTable("StoreItems");

                    b.HasData(
                        new
                        {
                            id = 1,
                            approvedQuantity = 0,
                            availability = true,
                            availableQuantity = 10,
                            itemDescription = "የኢትዮጵያ መከላከያ መሳሪያዎችና ጥይቶች",
                            model = "ክላሽ ጠብመንጃ",
                            quantity = 10,
                            serialNo = "serial 1",
                            shelfNo = "No. 1",
                            storeHeaderId = 1,
                            storeNo = "No. 1",
                            type = "ክላሽ ጠብመንጃ"
                        },
                        new
                        {
                            id = 2,
                            approvedQuantity = 0,
                            availability = true,
                            availableQuantity = 10,
                            itemDescription = "የኢትዮጵያ መከላከያ መሳሪያዎችና ጥይቶች",
                            model = "ክላሽ ጠብመንጃ ካርታ",
                            quantity = 10,
                            serialNo = "serial 2",
                            shelfNo = "No 2",
                            storeHeaderId = 1,
                            storeNo = "No. 1",
                            type = "ክላሽ ጠብመንጃ ካርታ"
                        },
                        new
                        {
                            id = 3,
                            approvedQuantity = 0,
                            availability = true,
                            availableQuantity = 10,
                            itemDescription = "የፌደራል ፖሊስ የክላሽ ጠብመንጃዎችና ጥይች",
                            model = "የፒኬአም መተረየስ",
                            quantity = 10,
                            serialNo = "serial 3",
                            shelfNo = "No. 1",
                            storeHeaderId = 2,
                            storeNo = "N0 2",
                            type = "የፒኬአም መተረየስ"
                        },
                        new
                        {
                            id = 4,
                            approvedQuantity = 0,
                            availability = true,
                            availableQuantity = 10,
                            itemDescription = "የኢትዮጵያ መከላከያ መሳሪያዎችና ጥይቶች",
                            model = "ክላሽ ጠብመንጃ AK-47",
                            quantity = 10,
                            serialNo = "serial 4",
                            shelfNo = "No 2",
                            storeHeaderId = 1,
                            storeNo = "No. 1",
                            type = "ክላሽ ጠብመንጃ"
                        },
                        new
                        {
                            id = 5,
                            approvedQuantity = 0,
                            availability = true,
                            availableQuantity = 10,
                            itemDescription = "የፌደራል ፖሊስ የክላሽ ጠብመንጃዎችና ጥይች",
                            model = "ካኑኒ ኤስ ሽጉጥ",
                            quantity = 10,
                            serialNo = "serial 5",
                            shelfNo = "No. 1",
                            storeHeaderId = 2,
                            storeNo = "N0 2",
                            type = "ካኑኒ ኤስ ሽጉጥ"
                        },
                        new
                        {
                            id = 6,
                            approvedQuantity = 0,
                            availability = true,
                            availableQuantity = 10,
                            itemDescription = "የፌደራል ፖሊስ የክላሽ ጠብመንጃዎችና ጥይች",
                            model = "ካኑኒ ኤስ ሽጉጥ",
                            quantity = 10,
                            serialNo = "serial 6",
                            shelfNo = "No. 1",
                            storeHeaderId = 1,
                            storeNo = "N0 2",
                            type = "ካኑኒ ኤስ ሽጉጥ"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b4fc5608-7d52-43e5-a12d-64abe589644b",
                            ConcurrencyStamp = "1161b83a-7c55-4d78-997d-89af81478532",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "c8b3bd84-d740-4d27-9109-a9a1a9c7914a",
                            ConcurrencyStamp = "960d1388-299d-4c4e-9fe8-8ada288cbc94",
                            Name = "StoreMan",
                            NormalizedName = "STOREMAN"
                        },
                        new
                        {
                            Id = "3326eebc-4126-40e0-bb38-91a7df3af072",
                            ConcurrencyStamp = "a9f110b5-d8fb-4e51-a6a1-4e62158fcdef",
                            Name = "Request",
                            NormalizedName = "REQUEST"
                        },
                        new
                        {
                            Id = "f9cfdf74-ee00-45c9-bf90-63622e2d614c",
                            ConcurrencyStamp = "8ddfd6cb-0a06-4ade-b40c-2d1edee5dfc4",
                            Name = "Approve",
                            NormalizedName = "APPROVE"
                        },
                        new
                        {
                            Id = "05f31de7-9840-4b85-b227-11e38b142c57",
                            ConcurrencyStamp = "f92c60a8-aa28-4a95-8c97-c62235f0cde0",
                            Name = "View",
                            NormalizedName = "VIEW"
                        },
                        new
                        {
                            Id = "4aeea1f2-fac5-46a7-806c-4efed96623f2",
                            ConcurrencyStamp = "98943de1-ff47-4c75-ab0e-41342090facc",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UsersTokens", (string)null);
                });

            modelBuilder.Entity("DataModel.Models.Entities.Customer", b =>
                {
                    b.HasOne("DataModel.Models.Entities.HR", "HR")
                        .WithMany()
                        .HasForeignKey("hrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR");
                });

            modelBuilder.Entity("DataModel.Models.Entities.CustomerWarranty", b =>
                {
                    b.HasOne("DataModel.Models.Entities.Customer", "Customer")
                        .WithMany("CustomerWarranties")
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DataModel.Models.Entities.Distribute", b =>
                {
                    b.HasOne("DataModel.Models.Entities.RequestItem", "RequestItem")
                        .WithMany()
                        .HasForeignKey("requestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Models.Entities.StoreItem", "StoreItem")
                        .WithMany()
                        .HasForeignKey("storeItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestItem");

                    b.Navigation("StoreItem");
                });

            modelBuilder.Entity("DataModel.Models.Entities.NotifyItem", b =>
                {
                    b.HasOne("DataModel.Models.Entities.NotifyHeader", "NotifyHeader")
                        .WithMany("NotifyItems")
                        .HasForeignKey("notifyHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotifyHeader");
                });

            modelBuilder.Entity("DataModel.Models.Entities.RequestHeader", b =>
                {
                    b.HasOne("DataModel.Models.Entities.HR", "HR")
                        .WithMany()
                        .HasForeignKey("hrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR");
                });

            modelBuilder.Entity("DataModel.Models.Entities.RequestItem", b =>
                {
                    b.HasOne("DataModel.Models.Entities.RequestHeader", "RequestHeader")
                        .WithMany("RequestItems")
                        .HasForeignKey("requestHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestHeader");
                });

            modelBuilder.Entity("DataModel.Models.Entities.ReturnHeader", b =>
                {
                    b.HasOne("DataModel.Models.Entities.HR", "HR")
                        .WithMany()
                        .HasForeignKey("hrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR");
                });

            modelBuilder.Entity("DataModel.Models.Entities.ReturnItem", b =>
                {
                    b.HasOne("DataModel.Models.Entities.ReturnHeader", "ReturnHeader")
                        .WithMany("ReturnItems")
                        .HasForeignKey("returnHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReturnHeader");
                });

            modelBuilder.Entity("DataModel.Models.Entities.StoreItem", b =>
                {
                    b.HasOne("DataModel.Models.Entities.StoreHeader", "StoreHeader")
                        .WithMany("StoreItems")
                        .HasForeignKey("storeHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreHeader");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DataModel.Identity.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DataModel.Identity.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Identity.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DataModel.Identity.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.Models.Entities.Customer", b =>
                {
                    b.Navigation("CustomerWarranties");
                });

            modelBuilder.Entity("DataModel.Models.Entities.NotifyHeader", b =>
                {
                    b.Navigation("NotifyItems");
                });

            modelBuilder.Entity("DataModel.Models.Entities.RequestHeader", b =>
                {
                    b.Navigation("RequestItems");
                });

            modelBuilder.Entity("DataModel.Models.Entities.ReturnHeader", b =>
                {
                    b.Navigation("ReturnItems");
                });

            modelBuilder.Entity("DataModel.Models.Entities.StoreHeader", b =>
                {
                    b.Navigation("StoreItems");
                });
#pragma warning restore 612, 618
        }
    }
}
